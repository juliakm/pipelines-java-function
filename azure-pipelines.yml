# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- julia/functions-update-pipeline

variables:
  - name: appName
    value: my-app-name 


pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    # jdkVersionOption: '1.11'
    # jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    goals: 'package'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '/target/azure-functions/**/**'
    TargetFolder: '$(build.artifactstagingdirectory)'

# - task: ArchiveFiles@2
#   displayName: Zip Azure Functions files
#   inputs:
#     rootFolderOrFile: '$(build.artifactstagingdirectory)/target/azure-functions/**'
#     includeRootFolder: false
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#     replaceExistingArchive: true
# - task: PublishTestResults@2
#   inputs:
#     testResultsFormat: 'JUnit'
#     testResultsFiles: '**/TEST-*.xml'

# - task: AzureFunctionApp@1
#   displayName: Azure Function App deploy
#   inputs:
#     azureSubscription: 'Content health and performance(82c135d4-f813-4bec-a93e-60e4323918ee)'
#     appType: 'functionApp'
#     appName: '$(appName)'
#     package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#     deploymentMethod: 'runFromPackage'
